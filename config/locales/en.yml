# Files in the config/locales directory are used for internationalization
# and are automatically loaded by Rails. If you want to use locales other
# than English, add the necessary files in this directory.
#
# To use the locales, use `I18n.t`:
#
#     I18n.t "hello"
#
# In views, this is aliased to just `t`:
#
#     <%= t("hello") %>
#
# To use a different locale, set it with `I18n.locale`:
#
#     I18n.locale = :es
#
# This would use the information in config/locales/es.yml.
#
# The following keys must be escaped otherwise they will not be retrieved by
# the default I18n backend:
#
# true, false, on, off, yes, no
#
# Instead, surround them with single quotes.
#
# en:
#   "true": "foo"
#
# To learn more, please read the Rails Internationalization guide
# available at https://guides.rubyonrails.org/i18n.html.

en:
  hello: "Hello world"
  game_name: Rock Paper Scissors
  home: Home
  settings: Settings
  profile: My Profile
  statistic: Statistic
  sign_in: Sign In
  sign_out: Sign Out
  rules_head: What are the rules?
  rules_description: "The rules are very simple and probably you remember them from your childhood:"
  choose_rock: If you choose Rock, you will win against Scissors but lose against Paper.
  choose_scissors: If you choose Scissors, you will win against Paper but lose against Rock.
  choose_paper: If you choose Paper, you will win against Rock but lose against Scissors.
  best_strategy_head: What is the best strategy in rock, paper, scissors?
  best_strategy: |
    Unless you can sense a general pattern in your opponent's play, just try to be as random as possible.
    If you never let your opponent know your next move, then they will have no way of getting an edge on you.
  why_head: Why is rock, paper, scissors so popular?
  why: |
    People play Rock, Paper, Scissors for all sorts of reasons. One of the most common reasons for playing the game is to settle disputes.
    It is kind of like tossing a coin, just with a little bit more strategy involved and in a more dynamic way.
  lets_play: Let's play!
  models:
    match:
      statuses:
        won: You won! %{player_hand} beats %{opponent_hand}!
        lost: You lost! %{opponent_hand} beats %{player_hand}
        tie: It is tie!

